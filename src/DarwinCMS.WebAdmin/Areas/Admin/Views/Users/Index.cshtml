@model DarwinCMS.WebAdmin.Areas.Admin.ViewModels.Users.UserListViewModel

@{
    ViewData["Title"] = "User Management";
    var startIndex = (Model.CurrentPage - 1) * Model.PageSize;
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2><i class="fas fa-users me-2"></i>User Management</h2>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus me-1"></i> Create New User
        </a>
    </div>

    <!-- Search & Filter Form -->
    <form method="get" asp-action="Index" class="row mb-3 g-2 align-items-end">
        <div class="col-md-4">
            <label class="form-label">Search</label>
            <input type="text" name="searchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Username or Email" />
        </div>
        <div class="col-md-3">
            <label class="form-label">Filter by Role</label>
            <select name="roleFilterId" class="form-select">
                <option value="">All Roles</option>
                @foreach (var role in Model.Roles)
                {
                    <option value="@role.Value" selected="@(role.Value == Model.RoleFilterId?.ToString())">@role.Text</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <button type="submit" class="btn btn-outline-secondary w-100">
                <i class="fas fa-search me-1"></i> Search
            </button>
        </div>
        @if (Model.HasFilter)
        {
            <div class="col-md-2">
                <a asp-action="Index" class="btn btn-outline-dark w-100">
                    <i class="fas fa-times"></i> Clear
                </a>
            </div>
        }
    </form>

    <!-- User List Table -->
    <div class="table-responsive">
        <table class="table table-bordered table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th>#</th>
                    <th>
                        <a asp-action="Index"
                           asp-route-searchTerm="@Model.SearchTerm"
                           asp-route-roleFilterId="@Model.RoleFilterId"
                           asp-route-sortColumn="Username"
                           asp-route-sortDirection="@Model.GetNextSortDirection("Username")">
                            Username @RenderSortIcon("Username")
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index"
                           asp-route-searchTerm="@Model.SearchTerm"
                           asp-route-roleFilterId="@Model.RoleFilterId"
                           asp-route-sortColumn="Email"
                           asp-route-sortDirection="@Model.GetNextSortDirection("Email")">
                            Email @RenderSortIcon("Email")
                        </a>
                    </th>
                    <th>Roles</th>
                    <th>
                        <a asp-action="Index"
                           asp-route-searchTerm="@Model.SearchTerm"
                           asp-route-roleFilterId="@Model.RoleFilterId"
                           asp-route-sortColumn="CreatedAt"
                           asp-route-sortDirection="@Model.GetNextSortDirection("CreatedAt")">
                            Created @RenderSortIcon("CreatedAt")
                        </a>
                    </th>
                    <th class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Users.Any())
                {
                    for (int i = 0; i < Model.Users.Count; i++)
                    {
                        var user = Model.Users[i];
                        <tr>
                            <td>@(startIndex + i + 1)</td>
                            <td>@user.Username</td>
                            <td>@user.Email</td>
                            <td>
                                @if (user.RoleNames?.Any() == true)
                                {
                                    @string.Join(", ", user.RoleNames)
                                }
                                else
                                {
                                    <span class="text-muted">-</span>
                                }
                            </td>
                            <td>@user.CreatedAt.ToString("yyyy-MM-dd")</td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-sm btn-warning">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                                <a asp-action="Delete" asp-route-id="@user.Id" class="btn btn-sm btn-danger">
                                    <i class="fas fa-trash-alt"></i> Delete
                                </a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="text-center text-muted">No users found.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <nav class="mt-3">
            <ul class="pagination justify-content-center">
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                        <a class="page-link"
                           asp-action="Index"
                           asp-route-page="@i"
                           asp-route-searchTerm="@Model.SearchTerm"
                           asp-route-roleFilterId="@Model.RoleFilterId"
                           asp-route-sortColumn="@Model.SortColumn"
                           asp-route-sortDirection="@Model.SortDirection">
                            @i
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>

@functions {
    private IHtmlContent RenderSortIcon(string column)
    {
        var icon = Model.GetSortIcon(column);
        return string.IsNullOrEmpty(icon)
            ? Html.Raw("")
            : Html.Raw($"<i class=\"fas {icon} ms-1\"></i>");
    }
}
