@model DarwinCMS.WebAdmin.Areas.Admin.ViewModels.Menus.EditMenuItemViewModel

@{
    ViewData["Title"] = "Edit Menu Item";
}

<h1 class="mb-4">
    <i class="fas fa-edit me-2"></i> Edit Menu Item
</h1>

<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="MenuId" />
    <input type="hidden" asp-for="ParentId" />

    <div class="row mb-3">
        <div class="col-md-6">
            <label asp-for="Title" class="form-label"></label>
            <input asp-for="Title" class="form-control" />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>

        <div class="col-md-6">
            <label asp-for="Icon" class="form-label"></label>
            <input asp-for="Icon" class="form-control" />
            <span asp-validation-for="Icon" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-6">
            <label asp-for="LinkType" class="form-label"></label>
            <select asp-for="LinkType" class="form-select" id="linkTypeSelector">
                <option value="internal">Internal Page</option>
                <option value="external">External URL</option>
                <option value="module">Module Route</option>
            </select>
            <span asp-validation-for="LinkType" class="text-danger"></span>
        </div>

        <div class="col-md-6">
            <div id="internalLinkSection">
                <label asp-for="PageId" class="form-label">Linked Page</label>
                <select asp-for="PageId" class="form-select">
                    <option value="">-- Choose Page --</option>
                    @* Populate dynamically from ViewBag.Pages if needed *@
                </select>
            </div>

            <div id="externalLinkSection" style="display: none;">
                <label asp-for="Url" class="form-label">Custom URL</label>
                <input asp-for="Url" class="form-control" />
                <span asp-validation-for="Url" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-md-6">
            <label asp-for="DisplayCondition" class="form-label"></label>
            <select asp-for="DisplayCondition" class="form-select">
                <option value="always">Always</option>
                <option value="auth">Authenticated Users</option>
                <option value="guest">Guests Only</option>
            </select>
            <span asp-validation-for="DisplayCondition" class="text-danger"></span>
        </div>

        <div class="col-md-3">
            <label asp-for="DisplayOrder" class="form-label"></label>
            <input asp-for="DisplayOrder" type="number" class="form-control" />
            <span asp-validation-for="DisplayOrder" class="text-danger"></span>
        </div>

        <div class="col-md-3 form-check mt-4 pt-2">
            <input asp-for="IsActive" class="form-check-input" />
            <label asp-for="IsActive" class="form-check-label"></label>
        </div>
    </div>

    <div class="d-flex justify-content-between mt-4">
        <a asp-action="Index" asp-route-menuId="@Model.MenuId" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-1"></i> Cancel
        </a>

        <button type="submit" class="btn btn-primary">
            <i class="fas fa-save me-1"></i> Save Changes
        </button>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        const typeSelector = document.getElementById('linkTypeSelector');
        const internal = document.getElementById('internalLinkSection');
        const external = document.getElementById('externalLinkSection');

        typeSelector.addEventListener('change', function () {
            if (this.value === 'internal') {
                internal.style.display = '';
                external.style.display = 'none';
            } else {
                internal.style.display = 'none';
                external.style.display = '';
            }
        });

        // Auto-trigger change on load
        typeSelector.dispatchEvent(new Event('change'));
    </script>
}
