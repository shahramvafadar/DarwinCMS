@model DarwinCMS.WebAdmin.Areas.Admin.ViewModels.Roles.RoleListViewModel

@{
    ViewData["Title"] = "Roles Management";
    var startIndex = (Model.CurrentPage - 1) * Model.PageSize;
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h2><i class="fas fa-users-cog me-2"></i> Roles</h2>
        <a asp-action="Create" class="btn btn-success">
            <i class="fas fa-plus me-1"></i> Create New Role
        </a>
    </div>

    <!-- Search & Filter Form -->
    <form method="get" asp-action="Index" class="row g-2 mb-3 align-items-end">
        <div class="col-md-4">
            <input type="text" name="searchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Search by name or display name..." />
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-outline-primary w-100">
                <i class="fas fa-search me-1"></i> Filter
            </button>
        </div>
        @if (!string.IsNullOrWhiteSpace(Model.SearchTerm))
        {
            <div class="col-md-2">
                <a asp-action="Index" class="btn btn-outline-dark w-100">
                    <i class="fas fa-times"></i> Clear
                </a>
            </div>
        }
    </form>

    <!-- Roles Table -->
    <div class="table-responsive">
        <table class="table table-bordered table-hover align-middle">
            <thead class="table-light">
                <tr>
                    <th>#</th>
                    <th>
                        <a asp-action="Index" asp-route-sortColumn="Name" asp-route-sortDirection="@(Model.SortColumn == "Name" && Model.SortDirection == "asc" ? "desc" : "asc")">
                            Name
                            @if (Model.SortColumn == "Name")
                            {
                                <i class="fas fa-sort-@(Model.SortDirection == "asc" ? "up" : "down")"></i>
                            }
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortColumn="DisplayName" asp-route-sortDirection="@(Model.SortColumn == "DisplayName" && Model.SortDirection == "asc" ? "desc" : "asc")">
                            Display Name
                            @if (Model.SortColumn == "DisplayName")
                            {
                                <i class="fas fa-sort-@(Model.SortDirection == "asc" ? "up" : "down")"></i>
                            }
                        </a>
                    </th>
                    <th>Status</th>
                    <th>Description</th>
                    <th class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Roles.Any())
                {
                    for (int i = 0; i < Model.Roles.Count; i++)
                    {
                        var item = Model.Roles[i];
                        <tr>
                            <td>@(startIndex + i + 1)</td>
                            <td>@item.Name</td>
                            <td>@item.DisplayName</td>
                            <td>
                                @if (item.IsActive)
                                {
                                    <span class="badge bg-success">Active</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Inactive</span>
                                }
                            </td>
                            <td>@item.Description</td>
                            <td class="text-center">
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">
                                    <i class="fas fa-edit"></i> Edit
                                </a>
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">
                                    <i class="fas fa-trash-alt"></i> Delete
                                </a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="text-center text-muted">No roles found.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    @if (Model.TotalPages > 1)
    {
        <nav class="mt-3">
            <ul class="pagination justify-content-center">
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                        <a class="page-link"
                           asp-action="Index"
                           asp-route-page="@i"
                           asp-route-searchTerm="@Model.SearchTerm"
                           asp-route-sortColumn="@Model.SortColumn"
                           asp-route-sortDirection="@Model.SortDirection">
                            @i
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }

    <!-- Recycle Bin Button: Always at the end of the page -->
    @await Component.InvokeAsync("RecycleBinButton")
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
